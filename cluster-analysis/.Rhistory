mtcars$wt,
alternative = "less",
method = "spearman",
conf.level = 0.8,
exact = FALSE
)
head(cbind(df[,1:2], df[,5:6]))
# factorizing
df$gender = factor(df$gender)
# factorizing
df$gender = factor(df$gender)
# factorizing
df$gender = factor(df$gender)
# = Introduction into R =
#
# Agenda:
# - variables
# - operations
# - data structures
# - data frames
# = 1. Variables =
# variable assignment is done by "<-" (or in some cases by "=")
age <- 42
# all variables are mutable
age <- 21
age <- age + 1
# R has the dynamic typing discipline
age <- "2"
# = 2. Operations =
# help
?abs
??sqrt
# raise to power
2**3
2^3
# operator precedence, the use of parentheses
2^(3+1)
x <- 2
exp(x)
log(x)
?log
log10(100)
# logical operations
x >= 3
x == 2
x != 2
x != 2 | TRUE
!((TRUE | FALSE) & (TRUE & FALSE))
y = !((TRUE | FALSE) & (TRUE & FALSE))
TRUE
10
10.0
"female"
# = 3. Data structures=
# vectors
?c
colors <- c("red", "green", "blue")
# Python, C: colros = ["red", "green", "blue"]
numbers <- c(1, 10, 100)
log10(numbers)
c(1:3) + log10(numbers)
?c
c(1:4) + с(1:2)
colors[1]
colors[1:3]
colors[2:3]
colors[c(1,3)]
colors[-c(1,3)]
temperatures <- c(17.5, 18, 18.5)
temperatures[temperatures >= 18]
?mean
mean(temperatures)
demeaned <- temperatures - mean(temperatures)
demeaned
?sd
sd(temperatures)
demeaned / sd(temperatures)
# factors
?factor
factor(colors)
summary(colors)
colors <- factor(colors)
colors
summary(colors)
gender_samples <- factor(c("female", "male", "female", "female"))
summary(gender_samples)
# = 4. Data frames =
?read.table
?read.csv
df <- read.csv("evaluation.csv")
df
?head
head(df)
tail(df)
str(df)
names(df)
summary(df)
df$gender
df$gender[55]
# factorizing
df$gender = factor(df$gender)
summary(df)
# filtering
df$gender == "female"
head(df)
head(df[df$gender == "female",])
head(df[df$gender == "female",1])
head(df[df$gender == "female",c(1:3)])
head(df[df$gender == "female" & df$score > 4.7,])
# subsetting
?subset
df$gender == "female"
head(subset(df, df$gender == "female"))
female_df <- subset(df, df$gender == "female")
male_df <- subset(df, df$gender == "male")
?rbind
?cbind
rbind(head(female_df, n=3), head(male_df, n=3))
new_df <- rbind(head(female_df, n=3), head(male_df, n=3))
summary(new_df)
head(cbind(df[,1:2], df[,5:6]))
new_df <- rbind(head(female_df, n=3), head(male_df, n=3))
# variable assignment is done by "<-" (or in some cases by "=")
age <- 42
# all variables are mutable
age <- 21
age <- age + 1
# R has the dynamic typing discipline
age <- "2"
# help
?abs
??sqrt
# raise to power
2**3
2^3
# operator precedence, the use of parentheses
2^(3+1)
x <- 2
exp(x)
log(x)
?log
log10(100)
# logical operations
x >= 3
x == 2
x != 2
x != 2 | TRUE
!((TRUE | FALSE) & (TRUE & FALSE))
y = !((TRUE | FALSE) & (TRUE & FALSE))
TRUE
10
10.0
"female"
# vectors
?c
colors <- c("red", "green", "blue")
# Python, C: colros = ["red", "green", "blue"]
numbers <- c(1, 10, 100)
log10(numbers)
c(1:3) + log10(numbers)
?c
c(1:4) + с(1:2)
?c
c(1:4) + с(1:2)
# vectors
?c
colors <- c("red", "green", "blue")
# Python, C: colros = ["red", "green", "blue"]
numbers <- c(1, 10, 100)
log10(numbers)
c(1:3) + log10(numbers)
?c
colors[1]
colors[1:3]
colors[2:3]
colors[c(1,3)]
colors[-c(1,3)]
temperatures <- c(17.5, 18, 18.5)
temperatures[temperatures >= 18]
?mean
mean(temperatures)
demeaned <- temperatures - mean(temperatures)
demeaned
?sd
sd(temperatures)
demeaned / sd(temperatures)
# factors
?factor
factor(colors)
summary(colors)
colors <- factor(colors)
colors
summary(colors)
gender_samples <- factor(c("female", "male", "female", "female"))
summary(gender_samples)
?read.table
?read.csv
df <- read.csv("evaluation.csv")
setwd("~/Projects/data-analysis")
?read.table
?read.csv
df <- read.csv("evaluation.csv")
?read.table
?read.csv
df <- read.csv("evaluations.csv")
df
?head
head(df)
tail(df)
str(df)
names(df)
summary(df)
df$gender
df$gender[55]
# factorizing
df$gender = factor(df$gender)
summary(df)
# filtering
df$gender == "female"
head(df)
head(df[df$gender == "female",])
head(df[df$gender == "female",1])
head(df[df$gender == "female",c(1:3)])
head(df[df$gender == "female" & df$score > 4.7,])
# subsetting
?subset
df$gender == "female"
head(subset(df, df$gender == "female"))
female_df <- subset(df, df$gender == "female")
male_df <- subset(df, df$gender == "male")
?rbind
?cbind
rbind(head(female_df, n=3), head(male_df, n=3))
new_df <- rbind(head(female_df, n=3), head(male_df, n=3))
summary(new_df)
head(cbind(df[,1:2], df[,5:6]))
library(MASS)
data(cats, package = "MASS")
View(cats)
str(cats)
summary(cats)
hist(cats$Hwt)
boxplot(cats$Hwt)
library(ggplot2)
ggplot(cats, aes(sample = Hwt)) + stat_qq() + stat_qq_line()
setwd("~/Projects/data-analysis")
setwd("~/Projects/data-analysis/descriptive-analysis")
```{r}
?shapiro.test
library(MASS)
data(cats, package = "MASS")
View(cats)
str(cats)
summary(cats)
hist(cats$Hwt)
boxplot(cats$Hwt)
library(ggplot2)
ggplot(cats, aes(sample = Hwt)) + stat_qq() + stat_qq_line()
?shapiro.test
shapiro.test(rnorm(n = 100, mean = 0, sd = 1))
shapiro.test(runif(100, min = 1, max = 10))
shapiro.test(runif(3, min = 1, max = 10))
shapiro.test(cats$Hwt)
df = read.csv("laptops.csv")
summary(df$Price_euros)
boxplot(df$Price_euros)
library(moments)
skewness(df$Price_euros)
shapiro.test(df$Price_euros)
library(MASS)
data(cats, package = "MASS")
View(cats)
str(cats)
summary(cats)
hist(cats$Hwt)
boxplot(cats$Hwt)
library(ggplot2)
ggplot(cats, aes(sample = Hwt)) + stat_qq() + stat_qq_line()
?shapiro.test
shapiro.test(rnorm(n = 100, mean = 0, sd = 1))
shapiro.test(runif(100, min = 1, max = 10))
shapiro.test(runif(3, min = 1, max = 10))
shapiro.test(cats$Hwt)
df = read.csv("laptops.csv")
summary(df$Price_euros)
boxplot(df$Price_euros)
library(moments)
skewness(df$Price_euros)
shapiro.test(df$Price_euros)
setwd("~/Projects/data-analysis/correlation-analysis")
head(mtcars)
cor(mtcars)
library(corrplot)
corrplot(cor(mtcars), method="color")
library(corrplot)
corrplot(cor(mtcars), method="number")
library(corrplot)
corrplot(cor(mtcars), method="pie")
library(corrplot)
corrplot(cor(mtcars), method="circle")
corrplot.mixed(cor(mtcars))
corrplot(cor(mtcars), order="hclust")
mtcarsCorMtest <- cor.mtest(mtcars, conf.level = .95)
mtcarsCorMtest
corrplot(
cor(mtcars),
p.mat = mtcarsCorMtest$p,
sig.level = .05,
order = "hclust",
addrect = 3
)
cor.test(
mtcars$mpg,
mtcars$wt,
alternative = "two.sided",
method = "pearson",
conf.level = 0.95
)
cor.test(
mtcars$mpg,
mtcars$wt,
alternative = "greater",
method = "kendall",
conf.level = 0.9,
exact = FALSE
)
cor.test(
mtcars$mpg,
mtcars$wt,
alternative = "less",
method = "spearman",
conf.level = 0.8,
exact = FALSE
)
head(mtcars)
cor(mtcars)
library(corrplot)
corrplot(cor(mtcars), method="color")
library(corrplot)
corrplot(cor(mtcars), method="number")
library(corrplot)
corrplot(cor(mtcars), method="pie")
library(corrplot)
corrplot(cor(mtcars), method="circle")
corrplot.mixed(cor(mtcars))
corrplot(cor(mtcars), order="hclust")
mtcarsCorMtest <- cor.mtest(mtcars, conf.level = .95)
mtcarsCorMtest
corrplot(
cor(mtcars),
p.mat = mtcarsCorMtest$p,
sig.level = .05,
order = "hclust",
addrect = 3
)
cor.test(
mtcars$mpg,
mtcars$wt,
alternative = "two.sided",
method = "pearson",
conf.level = 0.95
)
cor.test(
mtcars$mpg,
mtcars$wt,
alternative = "greater",
method = "kendall",
conf.level = 0.9,
exact = FALSE
)
cor.test(
mtcars$mpg,
mtcars$wt,
alternative = "less",
method = "spearman",
conf.level = 0.8,
exact = FALSE
)
setwd("~/Projects/data-analysis/regression-analysis")
?lm
?nls
head(airquality)
summary(airquality)
df <- na.omit(airquality)
summary(df)
plot(df$Temp, df$Ozone, xlab = "Temperature", ylab = "Ozone")
df$LogOzone <- log(df$Ozone)
linModel <- lm(formula = df$LogOzone ~ df$Temp)
linModel
summary(linModel)
linModel$coefficients
ozone <- df$Ozone
temp <- df$Temp
a <- linModel$coefficients[1]
b <- linModel$coefficients[2]
model <- nls(ozone ~ exp(a + b*temp), start = list(a=a, b=b))
summary(model)
plot(ozone ~ temp)
curve(exp(coef(model)["a"] + coef(model)["b"] * x), add = T, col = "red")
plot(ozone, predict(model), xlab="True Ozone", "ylab" = "Ozone Forecast")
abline(c(0, 1), col="red")
resid <- residuals(model)
pred <- predict(model)
plot(pred, resid)
abline(0, 0, col="red")
qqnorm(resid)
qqline(resid, col="red")
head(airquality)
summary(airquality)
df <- na.omit(airquality)
summary(df)
plot(df$Temp, df$Ozone, xlab = "Temperature", ylab = "Ozone")
df$LogOzone <- log(df$Ozone)
linModel <- lm(formula = df$LogOzone ~ df$Temp)
linModel
summary(linModel)
linModel$coefficients
ozone <- df$Ozone
temp <- df$Temp
a <- linModel$coefficients[1]
b <- linModel$coefficients[2]
model <- nls(ozone ~ exp(a + b*temp), start = list(a=a, b=b))
summary(model)
plot(ozone ~ temp)
curve(exp(coef(model)["a"] + coef(model)["b"] * x), add = T, col = "red")
plot(ozone, predict(model), xlab="True Ozone", "ylab" = "Ozone Forecast")
abline(c(0, 1), col="red")
resid <- residuals(model)
pred <- predict(model)
plot(pred, resid)
abline(0, 0, col="red")
qqnorm(resid)
qqline(resid, col="red")
setwd("~/Projects/data-analysis/dispersion-analysis")
?aov
df = read.csv("amess.csv")
View(df)
summary(df)
df$treatmnt <- factor(df$treatmnt)
summary(df)
levels(df$treatmnt)
stripchart(df$folate ~ df$treatmnt, col = c("blue", "green", "black"))
tapply(df$folate, df$treatmnt, mean)
boxplot(df$folate ~ df$treatmnt)
shapiro.test(df$folate[df$treatmnt == "1"])
shapiro.test(df$folate[df$treatmnt == "2"])
shapiro.test(df$folate[df$treatmnt == "3"])
bartlett.test(df$folate ~ df$treatmnt)
summary(aov(df$folate ~ df$treatmnt))
contrasts(df$treatmnt)
summary(lm(df$folate ~ df$treatmnt))
tapply(df$folate, df$treatmnt, mean)
mean(tapply(df$folate, df$treatmnt, mean))
contrasts(df$treatmnt) <- contr.sum
contrasts(df$treatmnt)
summary(lm(df$folate ~ df$treatmnt))
setwd("~/Projects/data-analysis/time-series-analysis")
?acf
?pacf
?pacf
?sqrt
?pacf
?HoltWinters
?adf
library(forecast)
install.packages(forecast)
install.packages("forecast")
View(new_df)
library(forecast)
library(TTR)
library(tseries)
data(gas, package='forecast')
head(gas)
summary(gas)
plot.ts(gas, xlab="Time", ylab="Gas production")
ggseasonplot(gas)
plot.ts(log(gas), xlab="Time", ylab="Gas production")
plot.ts(SMA(log(gas), n = 50), xlab="Time", ylab="Gas production")
plot(decompose(log(gas)))
acf(log(gas))
pacf(log(gas))
hw1 <- HoltWinters(log(gas))
hw1
plot(hw1)
hw2 <- forecast:::forecast.HoltWinters(hw1, h = 50)
plot(hw2)
adf.test(log(gas))
plot(diff(log(gas)))
plot(diff(diff(log(gas))))
fit <- auto.arima(log(gas), stationary = FALSE)
autoplot(forecast(fit, level = c(95), h = 50))
acf(fit$residuals)
Box.test(fit$residuals, type="Ljung-Box")
checkresiduals(fit, test=FALSE)
setwd("~/Projects/data-analysis/cluster-analysis")
?hclust
?fviz_nbclust
library(cluster)
library(ggplot2)
library(factoextra)
install.packages(factoextra)
install.packages("factoextra")
library(cluster)
library(ggplot2)
library(factoextra)
install.packages("factoextra")
library(cluster)
library(ggplot2)
library(factoextra)
library(factoextra)
install.packages("factoextra")
install.packages("factoextra")
